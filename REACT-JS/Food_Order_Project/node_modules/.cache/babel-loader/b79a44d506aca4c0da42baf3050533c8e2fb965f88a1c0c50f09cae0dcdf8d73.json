{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\REACT-JS\\\\Food_Order_Project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\n/*const DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Chicken Biriyani',\r\n    description: 'Finest chicken and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'PIG Biriyani',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Motton Biriyani',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n  {\r\n    id: 'm5',\r\n    name: 'White Rice ',\r\n    description: 'Healthy...',\r\n    price: 87.99,\r\n  },\r\n];*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-45ca9-default-rtdb.firebaseio.com/meals.json/');\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n  ;\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableMeals, \"h6NqshMKmEibng/VSdFADfHCW3w=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","children","fileName","_jsxFileName","lineNumber","columnNumber","mealsList","map","meal","className","_c","$RefreshReg$"],"sources":["D:/REACT JS/REACT-JS/Food_Order_Project/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport classes from './AvailableMeals.module.css';\r\nimport { useEffect,useState } from 'react';\r\n\r\n/*const DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Chicken Biriyani',\r\n    description: 'Finest chicken and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'PIG Biriyani',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Motton Biriyani',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n  {\r\n    id: 'm5',\r\n    name: 'White Rice ',\r\n    description: 'Healthy...',\r\n    price: 87.99,\r\n  },\r\n];*/\r\n\r\nconst AvailableMeals = () => {\r\n  const[meals,setMeals]=useState ([]);\r\n  const [isLoading,setIsLoading]=useState(true);\r\n  useEffect(() =>{\r\n    const fetchMeals=async() =>{\r\n      const response =await fetch('https://react-http-45ca9-default-rtdb.firebaseio.com/meals.json/');\r\n      const responseData =await response.json();\r\n      const loadedMeals=[];\r\n      for (const key in responseData){\r\n        loadedMeals.push({\r\n          id:key,\r\n          name:responseData[key].name,\r\n          description:responseData[key].description,\r\n          price:responseData[key].price\r\n\r\n\r\n\r\n        });\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n\r\n\r\n    };\r\n\r\n  \r\n    fetchMeals();\r\n  },[]);\r\n  if(isLoading){\r\n    return (<section>\r\n      <p>Loading.....</p>\r\n    </section>\r\n    )\r\n  };\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,6BAA6B;AACjD,SAASC,SAAS,EAACC,QAAQ,QAAQ,OAAO;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA,SAAAC,MAAA,IAAAC,OAAA;AAiCA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACN,QAAQ,CAAE,EAAE,CAAC;EACnC,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAACR,QAAQ,CAAC,IAAI,CAAC;EAC7CD,SAAS,CAAC,MAAK;IACb,MAAMU,UAAU,GAAC,MAAAA,CAAA,KAAU;MACzB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,kEAAkE,CAAC;MAC/F,MAAMC,YAAY,GAAE,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACzC,MAAMC,WAAW,GAAC,EAAE;MACpB,KAAK,MAAMC,GAAG,IAAIH,YAAY,EAAC;QAC7BE,WAAW,CAACE,IAAI,CAAC;UACfC,EAAE,EAACF,GAAG;UACNG,IAAI,EAACN,YAAY,CAACG,GAAG,CAAC,CAACG,IAAI;UAC3BC,WAAW,EAACP,YAAY,CAACG,GAAG,CAAC,CAACI,WAAW;UACzCC,KAAK,EAACR,YAAY,CAACG,GAAG,CAAC,CAACK;QAI1B,CAAC,CAAC;MACJ;MACAd,QAAQ,CAACQ,WAAW,CAAC;MACrBN,YAAY,CAAC,KAAK,CAAC;IAGrB,CAAC;IAGDC,UAAU,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EACL,IAAGF,SAAS,EAAC;IACX,oBAAQL,OAAA;MAAAmB,QAAA,eACNnB,OAAA;QAAAmB,QAAA,EAAG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAEZ;EAAC;EAED,MAAMC,SAAS,GAAGrB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBAC/B1B,OAAA,CAACL,QAAQ;IACPoB,EAAE,EAAEW,IAAI,CAACX,EAAG;IAEZC,IAAI,EAAEU,IAAI,CAACV,IAAK;IAChBC,WAAW,EAAES,IAAI,CAACT,WAAY;IAC9BC,KAAK,EAAEQ,IAAI,CAACR;EAAM,GAHbQ,IAAI,CAACX,EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKf,CAAC;EAEF,oBACEvB,OAAA;IAAS2B,SAAS,EAAE/B,OAAO,CAACO,KAAM;IAAAgB,QAAA,eAChCnB,OAAA,CAACN,IAAI;MAAAyB,QAAA,eACHnB,OAAA;QAAAmB,QAAA,EAAKK;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAM;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACrB,EAAA,CApDID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}